[{"/Users/ethanwinter/Desktop/dapp/dappMiner/minerdapp/src/index.js":"1","/Users/ethanwinter/Desktop/dapp/dappMiner/minerdapp/src/App.js":"2","/Users/ethanwinter/Desktop/dapp/dappMiner/minerdapp/src/reportWebVitals.js":"3"},{"size":535,"mtime":1658625774350,"results":"4","hashOfConfig":"5"},{"size":7387,"mtime":1660178907116,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":1658625774352,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","suppressedMessages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"11"},"1vu66qk",{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"11"},"/Users/ethanwinter/Desktop/dapp/dappMiner/minerdapp/src/index.js",[],[],[],"/Users/ethanwinter/Desktop/dapp/dappMiner/minerdapp/src/App.js",["19","20","21","22","23","24","25","26","27","28","29","30"],[],"import { Button, ButtonGroup } from 'react-bootstrap';\nimport { ethers } from \"ethers\";\nimport { useState } from \"react\";\nimport MinerContract from \"./artifacts/contracts/MinerContract.sol/MinerContract.json\";\nimport CoinContract from \"./artifacts/contracts/GalaxyFuelCoin.json\";\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'sf-font';\nimport { TASK_COMPILE_SOLIDITY_LOG_RUN_COMPILER_END } from 'hardhat/builtin-tasks/task-names';\n\nconst minerAddress = \"0x1BbE23f1fE058769Af9132AeEf021905fdBDdE6f\";\nconst coinAddress = \"0xEc0f013A108d3639219Fa8210D5c7435E112332F\";\n\nfunction App() {\n\n  //property variables\n  const [message, setEggs] = useState(\"\");\n  const [currentMiners, setMiners] = useState(\"\");\n  const [userAddress, setAddress] = useState(\"Please Connect Wallet\");\n  const [status, setStatus] = useState(\"Connect Your Wallet\");\n\n\n\n  //request access to metamask accounts\n  async function requestAccount() {\n    await window.ethereum.request({ method: 'eth_requestAccounts' });\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const signer = provider.getSigner();\n    const signerAddress = await signer.getAddress();\n    setAddress(signerAddress);\n    setStatus('Connected');\n\n  }\n\n  //initialize coin contract and check permisions\n  async function initCoin() {\n    if (typeof window.ethereum !== \"undefined\") {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(coinAddress, CoinContract.abi, provider)\n      const contract2 = new ethers.Contract(coinAddress, CoinContract.abi, signer)\n      const signerAddress = await signer.getAddress();\n\n      try {\n        const balance = await contract.balanceOf(signerAddress);\n        const newBalance = Number(balance);\n        const allowance = await contract.allowance(signerAddress, minerAddress);\n        const newAllowance = Number(allowance);\n        console.log(\"balance: \", newBalance);\n        console.log(\"allowance: \", newAllowance);\n        if (balance==allowance || balance>allowance){\n          console.log(\"nigger\");\n          const approval = await contract2.approve(minerAddress, balance);\n        } else {\n          console.log('allowance is chilling')\n        }\n\n      } catch (error) {\n        console.log('Error: ', error);\n      }\n    }\n  }\n\n  //helper functions\n\n  //fetch current values stored in contract\n\n  async function fetchMiners() {\n    if (typeof window.ethereum !== \"undefined\") {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const contract = new ethers.Contract(minerAddress, MinerContract.abi, provider)\n      const signer = provider.getSigner();\n      const signerAddress = await signer.getAddress();\n\n      try {\n        const data = await contract.getMyMiners(signerAddress);\n        const newData = Number(data);\n        console.log(\"data: \", newData);\n        setMiners(newData);\n        setAddress(signerAddress);\n      } catch (error) {\n        console.log('Error: ', error);\n      }\n    }\n  }\n\n\n  async function buyMiners() {\n    if (message !== \"\") {\n      if (typeof window.ethereum !== \"undefined\") {\n        await requestAccount();\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner();\n        const signerAddress = signer.getAddress();\n\n        const contract = new ethers.Contract(minerAddress, MinerContract.abi, signer);\n        const newAmount = ethers.utils.parseUnits(message, 18);\n        const transaction = await contract.buyEggs(signerAddress, newAmount);\n\n        setEggs(\"\");\n\n        //waits for transaction to finish and logs new minertotal\n\n        await transaction.wait();\n        fetchMiners();\n        console.log(transaction);\n        /*print total miners\n        const miners = await contract.getMyMiners(signerAddress);\n        const newMiners = Number(miners);\n        console.log(newMiners);\n        */\n      }\n    }\n  }\n\n  return (\n    <div className=\"minerapp\">\n      <nav className=\"navbar navbarfont navbar-expand-md navbar-dark bg-transparent mb-4\">\n        <div className=\"container-fluid\" style={{ fontFamily: \"SF Pro Display\" }}>\n          <a className=\"navbar-brand px-5\" style={{ fontWeight: \"800\", fontSize: '25px' }} href=\"#\"></a><img src=\"galaxylogo.png\" width=\"8%\" />\n          <button className=\"navbar-toggler\" type=\"button\" onClick={requestAccount} data-bs-toggle=\"collapse\" data-bs-target=\"#navbarCollapse\" aria-controls=\"navbarCollapse\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n            <ul className=\"navbar-nav me-auto mb-2 px-3 mb-md-0\" style={{ fontSize: \"25px\" }}>\n              <li className=\"nav-item\">\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Token Miner</a>\n              </li>\n              <li className=\"nav-item\">\n                <a className=\"nav-link\" href=\"#\">Token Site</a>\n              </li>\n              <li className=\"nav-item\">\n                <a className=\"nav-link\">Documentation</a>\n              </li>\n            </ul>\n          </div>\n        </div>\n        <div className='px-5'>\n          <input id=\"connectbtn\" type=\"button\" className=\"connectbutton\" onClick={requestAccount} style={{ fontFamily: \"SF Pro Display\" }} value={status} />\n        </div>\n      </nav>\n      <div className='container'>\n        <div className='col minerform'>\n        <form>\n          <div className=\"row pt-3\">\n            <div>\n              <h1 className=\"pt-2\" style={{ fontWeight: \"30\" }}>Galaxy Fuel Miner</h1>\n            </div>\n            <h3># of miners</h3>\n            <div>\n              # of GFC to compound or collect\n              <Button className=\"button-style m-1\" style={{ border: \"0.2px\", borderRadius: \"14px\", boxShadow: \"1px 1px 5px #000000\" }}>\n                Compound\n              </Button>\n              <Button className=\"button-style m-1\" style={{ border: \"0.2px\", borderRadius: \"14px\", boxShadow: \"1px 1px 5px #000000\" }}>\n                Sell Miners\n              </Button>\n\n              //testing approval\n              <Button className=\"button-style m-1\" onClick={initCoin} style={{ border: \"0.2px\", borderRadius: \"14px\", boxShadow: \"1px 1px 5px #000000\" }}>\n                approve\n              </Button>\n\n            </div>\n          </div>\n          <div>\n            <label style={{ fontWeight: \"300\", fontSize: \"18px\" }}>Purchase Miners</label>\n          </div>\n          <input type=\"text\" placeholder='0 '/>\n          <label> GFC</label>\n          <div className=\"row px-2 pb-2 row-style\">\n            <div>\n              <Button className=\"button-style\" onClick={buyMiners} style={{ border: \"0.2px\", borderRadius: \"14px\", boxShadow: \"1px 1px 5px #000000\" }}>\n                Buy Miners\n              </Button>\n            </div>\n          </div>\n          <h6>Your Wallet Address</h6>\n            <div className=\"pb-3\" id='wallet-address' style={{\n              color: \"#39FF14\",\n              fontWeight: \"400\",\n              textShadow: \"1px 1px 1px black\",\n            }}>\n              <label>{userAddress}</label>\n            </div>\n        </form> \n      </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App;\n","/Users/ethanwinter/Desktop/dapp/dappMiner/minerdapp/src/reportWebVitals.js",[],[],{"ruleId":"31","severity":1,"message":"32","line":1,"column":18,"nodeType":"33","messageId":"34","endLine":1,"endColumn":29},{"ruleId":"31","severity":1,"message":"35","line":9,"column":10,"nodeType":"33","messageId":"34","endLine":9,"endColumn":52},{"ruleId":"31","severity":1,"message":"36","line":18,"column":10,"nodeType":"33","messageId":"34","endLine":18,"endColumn":23},{"ruleId":"37","severity":1,"message":"38","line":51,"column":20,"nodeType":"39","messageId":"40","endLine":51,"endColumn":22},{"ruleId":"31","severity":1,"message":"41","line":53,"column":17,"nodeType":"33","messageId":"34","endLine":53,"endColumn":25},{"ruleId":"42","severity":1,"message":"43","line":120,"column":11,"nodeType":"44","endLine":120,"endColumn":101},{"ruleId":"45","severity":1,"message":"46","line":120,"column":11,"nodeType":"44","endLine":120,"endColumn":101},{"ruleId":"47","severity":1,"message":"48","line":120,"column":105,"nodeType":"44","endLine":120,"endColumn":144},{"ruleId":"45","severity":1,"message":"46","line":127,"column":17,"nodeType":"44","endLine":127,"endColumn":77},{"ruleId":"45","severity":1,"message":"46","line":130,"column":17,"nodeType":"44","endLine":130,"endColumn":50},{"ruleId":"45","severity":1,"message":"49","line":133,"column":17,"nodeType":"44","endLine":133,"endColumn":41},{"ruleId":"50","severity":1,"message":"51","line":157,"column":24,"nodeType":"52","messageId":"53","endLine":160,"endColumn":15},"no-unused-vars","'ButtonGroup' is defined but never used.","Identifier","unusedVar","'TASK_COMPILE_SOLIDITY_LOG_RUN_COMPILER_END' is defined but never used.","'currentMiners' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'approval' is assigned a value but never used.","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","JSXText","putCommentInBraces"]