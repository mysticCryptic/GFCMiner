{"ast":null,"code":"var _jsxFileName = \"/Users/ethanwinter/Desktop/dapp/dappMiner/minerdapp/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { Button, Alert } from 'react-bootstrap';\nimport { ethers } from \"ethers\";\nimport { useState } from \"react\";\nimport MinerContract from \"./artifacts/contracts/MinerContract.sol/MinerContract.json\";\nimport './App.css';\nimport { TASK_COMPILE_SOLIDITY_LOG_RUN_COMPILER_END } from 'hardhat/builtin-tasks/task-names';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst contractAddress = \"0x1BbE23f1fE058769Af9132AeEf021905fdBDdE6f\";\n\nfunction App() {\n  _s();\n\n  //property variables\n  const [message, setEggs] = useState(\"\");\n  const [currentMiners, setMiners] = useState(\"\");\n  const [userAddress, setAddress] = useState(\"\"); //request access to metamask accounts\n\n  async function requestAccount() {\n    await window.ethereum.request({\n      method: 'eth_requestAccounts'\n    });\n  } //helper functions\n  //fetch current values stored in contract\n\n\n  async function fetchMiners() {\n    if (typeof window.ethereum !== \"undefined\") {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const contract = new ethers.Contract(contractAddress, MinerContract.abi, provider);\n      const signer = provider.getSigner();\n      const signerAddress = await signer.getAddress();\n\n      try {\n        const data = await contract.getMyMiners(signerAddress);\n        const newData = Number(data);\n        console.log(\"data: \", newData);\n        setMiners(newData);\n        setAddress(signerAddress);\n      } catch (error) {\n        console.log('Error: ', error);\n      }\n    }\n  }\n\n  async function buyMiners() {\n    if (message !== \"\") {\n      if (typeof window.ethereum !== \"undefined\") {\n        await requestAccount();\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner();\n        const signerAddress = signer.getAddress();\n        const contract = new ethers.Contract(contractAddress, MinerContract.abi, signer);\n        const newAmount = ethers.utils.parseUnits(message, 18);\n        const transaction = await contract.buyEggs(signerAddress, newAmount);\n        setEggs(\"\"); //waits for transaction to finish and logs new minertotal\n\n        await transaction.wait();\n        fetchMiners();\n        console.log(transaction);\n        /*print total miners\n        const miners = await contract.getMyMiners(signerAddress);\n        const newMiners = Number(miners);\n        console.log(newMiners);\n        */\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Galaxy Fuel Miner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: requestAccount,\n        children: \" connect wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Alert, {\n          children: \"Your Miners:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Alert, {\n          children: currentMiners\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Alert, {\n          children: \"Current Address:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Alert, {\n          children: userAddress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => setEggs(e.target.value),\n        value: message,\n        placeholder: \"convert GFC to miners\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: buyMiners,\n        children: \"Buy Miners\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: fetchMiners,\n        children: \"Sell Meteorite\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"l82T/qMByjMHVRtLKETjCz+7eks=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Button","Alert","ethers","useState","MinerContract","TASK_COMPILE_SOLIDITY_LOG_RUN_COMPILER_END","contractAddress","App","message","setEggs","currentMiners","setMiners","userAddress","setAddress","requestAccount","window","ethereum","request","method","fetchMiners","provider","providers","Web3Provider","contract","Contract","abi","signer","getSigner","signerAddress","getAddress","data","getMyMiners","newData","Number","console","log","error","buyMiners","newAmount","utils","parseUnits","transaction","buyEggs","wait","e","target","value"],"sources":["/Users/ethanwinter/Desktop/dapp/dappMiner/minerdapp/src/App.js"],"sourcesContent":["import { Button, Alert } from 'react-bootstrap';\nimport {ethers} from \"ethers\";\nimport {useState} from \"react\";\nimport MinerContract from \"./artifacts/contracts/MinerContract.sol/MinerContract.json\";\nimport './App.css';\nimport { TASK_COMPILE_SOLIDITY_LOG_RUN_COMPILER_END } from 'hardhat/builtin-tasks/task-names';\n\nconst contractAddress = \"0x1BbE23f1fE058769Af9132AeEf021905fdBDdE6f\";\n\nfunction App() {\n\n  //property variables\n  const [message, setEggs] = useState(\"\");\n  const [currentMiners, setMiners] = useState(\"\");\n  const [userAddress, setAddress] = useState(\"\");\n\n\n\n  //request access to metamask accounts\n  async function requestAccount(){\n    await window.ethereum.request({method: 'eth_requestAccounts'});\n  }\n\n  //helper functions\n\n  //fetch current values stored in contract\n\n  async function fetchMiners() {\n    if (typeof window.ethereum !== \"undefined\"){\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const contract = new ethers.Contract(contractAddress, MinerContract.abi, provider)\n      const signer = provider.getSigner();\n      const signerAddress = await signer.getAddress();\n\n      try {\n        const data = await contract.getMyMiners(signerAddress);\n        const newData = Number(data);\n        console.log(\"data: \", newData);\n        setMiners(newData);\n        setAddress(signerAddress);\n      } catch (error) {\n        console.log('Error: ', error);\n      }\n    }\n  }\n\n\n  async function buyMiners(){\n    if (message !== \"\"){\n      if (typeof window.ethereum !== \"undefined\"){\n        await requestAccount();\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner();\n        const signerAddress = signer.getAddress();\n\n        const contract = new ethers.Contract(contractAddress, MinerContract.abi, signer);\n        const newAmount = ethers.utils.parseUnits(message, 18);\n        const transaction = await contract.buyEggs(signerAddress, newAmount);\n\n        setEggs(\"\");\n\n        //waits for transaction to finish and logs new minertotal\n\n        await transaction.wait();\n        fetchMiners();\n        console.log(transaction);\n        /*print total miners\n        const miners = await contract.getMyMiners(signerAddress);\n        const newMiners = Number(miners);\n        console.log(newMiners);\n        */\n      }\n    }\n  }\n\n  return(\n  <div className = \"App\">\n    <header className = \"App-header\">\n      <h1>Galaxy Fuel Miner</h1>\n      <Button onClick ={requestAccount}> connect wallet</Button>\n    </header>\n    <div>\n      <div>\n      <Alert>Your Miners:</Alert>\n      <Alert>{currentMiners}</Alert>\n      </div>\n      <div>\n      <Alert>Current Address:</Alert>\n      <Alert>{userAddress}</Alert>\n      </div>\n      </div>\n    <div/>\n    <div>\n    <input\n        onChange={(e) => setEggs(e.target.value)}\n\n        value ={message}\n\n        placeholder='convert GFC to miners'/>\n    <Button onClick={ buyMiners}>Buy Miners</Button>\n    </div>\n    <div>\n    <Button onClick={fetchMiners}>Sell Meteorite</Button>\n    </div>\n  </div>\n  )\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}