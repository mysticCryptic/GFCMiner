{"ast":null,"code":"var _jsxFileName = \"/Users/ethanwinter/Desktop/dapp/dappMiner/minerdapp/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from './logo.svg';\nimport { ethers } from \"ethers\";\nimport { useState } from \"react\";\nimport MinerContract from \"./artifacts/contracts/MinerContract.sol/MinerContract.json\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst contractAddress = \"0x6396D1cC25971400A1c572B97385343426c51540\";\n\nfunction App() {\n  _s();\n\n  //property variables\n  const [message, setEggs] = useState(\"\"); //request access to metamask accounts\n\n  async function requestAccount() {\n    await window.ethereum.request({\n      method: 'eth_requestAccounts'\n    });\n  } //helper functions\n  //fetch current values stored in contract\n\n\n  async function fetchMiner() {\n    if (typeof window.ethereum !== \"undefined\") {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const contract = new ethers.Contract(contractAddress, MinerContract.abi, provider);\n\n      try {\n        const data = await contract.getMyMiners();\n        console.log(\"data: \", data);\n      } catch (error) {\n        console.log('Error: ', error);\n      }\n    }\n  }\n\n  async function buyMiners() {\n    if (!message) {\n      if (typeof window.ethereum !== \"undefined\") {\n        await requestAccount();\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner();\n        const contract = ethers.Contract(contractAddress, MinerContract.abi, signer);\n        const transaction = await contract.buyEggs(signer.getAddress(), message);\n        setEggs(\"\");\n        await transaction.wait();\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => setEggs(e.target.value),\n        value: message,\n        placeholder: \"convert meteorite to miners\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: buyMiners(),\n        children: \"Buy Miners\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Sell Meteorite\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"WB6XS2YxfCVq4+MxxsHS0o6Dkaw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","ethers","useState","MinerContract","contractAddress","App","message","setEggs","requestAccount","window","ethereum","request","method","fetchMiner","provider","providers","Web3Provider","contract","Contract","abi","data","getMyMiners","console","log","error","buyMiners","signer","getSigner","transaction","buyEggs","getAddress","wait","e","target","value"],"sources":["/Users/ethanwinter/Desktop/dapp/dappMiner/minerdapp/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport {ethers} from \"ethers\";\nimport {useState} from \"react\";\nimport MinerContract from \"./artifacts/contracts/MinerContract.sol/MinerContract.json\";\nimport './App.css';\n\nconst contractAddress = \"0x6396D1cC25971400A1c572B97385343426c51540\";\n\nfunction App() {\n\n  //property variables\n  const [message, setEggs] = useState(\"\");\n\n  //request access to metamask accounts\n  async function requestAccount(){\n    await window.ethereum.request({method: 'eth_requestAccounts'});\n  }\n\n  //helper functions\n\n  //fetch current values stored in contract\n\n  async function fetchMiner() {\n    if (typeof window.ethereum !== \"undefined\"){\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const contract = new ethers.Contract(contractAddress, MinerContract.abi, provider)\n\n      try {\n        const data = await contract.getMyMiners()\n        console.log(\"data: \", data)\n      } catch (error) {\n        console.log('Error: ', error);\n      }\n    }\n  }\n\n  async function buyMiners(){\n    if (!message){\n      if (typeof window.ethereum !== \"undefined\"){\n        await requestAccount();\n\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner();\n\n        const contract = ethers.Contract(contractAddress, MinerContract.abi, signer);\n        const transaction = await contract.buyEggs(signer.getAddress(), message);\n\n        setEggs(\"\");\n\n        await transaction.wait();\n      }\n    }\n  }\n\n  return(\n\n    <div className = \"App\">\n      <div  className = \"App-header\">\n\n      <input\n        onChange={(e) => setEggs(e.target.value)}\n\n        value ={message}\n\n        placeholder='convert meteorite to miners'/>\n\n      <button onClick={buyMiners()}>Buy Miners</button>\n      <button>Sell Meteorite</button>\n\n     </div>\n    </div>\n  )\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,YAAjB;AACA,SAAQC,MAAR,QAAqB,QAArB;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,OAAOC,aAAP,MAA0B,4DAA1B;AACA,OAAO,WAAP;;AAEA,MAAMC,eAAe,GAAG,4CAAxB;;AAEA,SAASC,GAAT,GAAe;EAAA;;EAEb;EACA,MAAM,CAACC,OAAD,EAAUC,OAAV,IAAqBL,QAAQ,CAAC,EAAD,CAAnC,CAHa,CAKb;;EACA,eAAeM,cAAf,GAA+B;IAC7B,MAAMC,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwB;MAACC,MAAM,EAAE;IAAT,CAAxB,CAAN;EACD,CARY,CAUb;EAEA;;;EAEA,eAAeC,UAAf,GAA4B;IAC1B,IAAI,OAAOJ,MAAM,CAACC,QAAd,KAA2B,WAA/B,EAA2C;MACzC,MAAMI,QAAQ,GAAG,IAAIb,MAAM,CAACc,SAAP,CAAiBC,YAArB,CAAkCP,MAAM,CAACC,QAAzC,CAAjB;MACA,MAAMO,QAAQ,GAAG,IAAIhB,MAAM,CAACiB,QAAX,CAAoBd,eAApB,EAAqCD,aAAa,CAACgB,GAAnD,EAAwDL,QAAxD,CAAjB;;MAEA,IAAI;QACF,MAAMM,IAAI,GAAG,MAAMH,QAAQ,CAACI,WAAT,EAAnB;QACAC,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBH,IAAtB;MACD,CAHD,CAGE,OAAOI,KAAP,EAAc;QACdF,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBC,KAAvB;MACD;IACF;EACF;;EAED,eAAeC,SAAf,GAA0B;IACxB,IAAI,CAACnB,OAAL,EAAa;MACX,IAAI,OAAOG,MAAM,CAACC,QAAd,KAA2B,WAA/B,EAA2C;QACzC,MAAMF,cAAc,EAApB;QAEA,MAAMM,QAAQ,GAAG,IAAIb,MAAM,CAACc,SAAP,CAAiBC,YAArB,CAAkCP,MAAM,CAACC,QAAzC,CAAjB;QACA,MAAMgB,MAAM,GAAGZ,QAAQ,CAACa,SAAT,EAAf;QAEA,MAAMV,QAAQ,GAAGhB,MAAM,CAACiB,QAAP,CAAgBd,eAAhB,EAAiCD,aAAa,CAACgB,GAA/C,EAAoDO,MAApD,CAAjB;QACA,MAAME,WAAW,GAAG,MAAMX,QAAQ,CAACY,OAAT,CAAiBH,MAAM,CAACI,UAAP,EAAjB,EAAsCxB,OAAtC,CAA1B;QAEAC,OAAO,CAAC,EAAD,CAAP;QAEA,MAAMqB,WAAW,CAACG,IAAZ,EAAN;MACD;IACF;EACF;;EAED,oBAEE;IAAK,SAAS,EAAG,KAAjB;IAAA,uBACE;MAAM,SAAS,EAAG,YAAlB;MAAA,wBAEA;QACE,QAAQ,EAAGC,CAAD,IAAOzB,OAAO,CAACyB,CAAC,CAACC,MAAF,CAASC,KAAV,CAD1B;QAGE,KAAK,EAAG5B,OAHV;QAKE,WAAW,EAAC;MALd;QAAA;QAAA;QAAA;MAAA,QAFA,eASA;QAAQ,OAAO,EAAEmB,SAAS,EAA1B;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QATA,eAUA;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAVA;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QAFF;AAkBD;;GAhEQpB,G;;KAAAA,G;AAkET,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}